.##############################################################################
.#
.#  GSL libbitcoin utilities in the 'global' scope.
.#
.#  This is a code generator built using the iMatix GSL code generation
.#  language. See https://github.com/imatix/gsl for details.
.#
.##############################################################################
.# Functions
.##############################################################################
.template 0

function is_boost_lib(name, unpublished)
    return starts_with(my.name, "boost_") & !is_true(my.unpublished)
endfunction

function is_boost_dependency(name)
    return (my.name = "boost") | is_boost_lib(my.name)
endfunction

function is_package_lib(name, version)
    return !is_empty(my.version) & !is_boost_dependency(my.name)
endfunction

function is_unpackaged_lib(name, function)
    return !is_empty(my.function) & !is_boost_dependency(my.name)
endfunction

function global.is_empty(value)
    return ((my.value ? "") = "")
endfunction

function global.is_true(value)
    return ((my.value ? "false") = "true")
endfunction

function global.starts_with(text, prefix)
    return string.prefixed(my.text, my.prefix)
endfunction

function global.trim_left(text)
    define extracted = ""
    regexp.match("^ +(.*)$", my.text, extracted)
    return extracted ? ""
endfunction

function global.trim_right(text)
    return string.trim(my.text)
endfunction

function global.trim_both(text)
    return trim_left(string.trim(my.text))
endfunction

.endtemplate
.##############################################################################
.# Macros
.##############################################################################
.macro global.copyleft(name)
# Copyright (c) 2011-2014 $(my.name:) developers (see COPYING).
#
#********* GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY ***********
#
.endmacro copyleft
.##############################################################################