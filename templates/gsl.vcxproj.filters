.template 0
###############################################################################
# Copyright (c) 2014-2015 libbitcoin developers (see COPYING).
#
# GSL generate libbitcoin.vcxproj.filters.
#
# This is a code generator built using the iMatix GSL code generation
# language. See https://github.com/imatix/gsl for details.
###############################################################################
# Functions
###############################################################################

###############################################################################
# Macros
###############################################################################
.endtemplate
.template 1
.
.macro render_filter(compile, include, uuid)
<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup>
    <Filter Include="src">
      <UniqueIdentifier>{$(my.uuid)}</UniqueIdentifier>
    </Filter>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\..\..\$(my.files)">
      <Filter>$(my.folder)</Filter>
    </ClCompile>
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\..\resource.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="..\..\resource.rc" />
  </ItemGroup>
</Project>
.endmacro
.
.endtemplate
.template 0
###############################################################################
# Generation
###############################################################################
function generate_filter()
    terminator="\r\n"
    for generate.repository by name as _repository
        for _repository.make as _make
            for _make.product as _product
                  create_directory(my.project)
                  define my.out_file = "$(my.project)/$(my.primary).vcxproj.filters"
                  notify(my.out_file)
                  output(my.out_file)

                  c_copyleft(_repository.name)
                  
                  render_filter("","")

                close
            endfor _product
        endfor _make
    endfor _repository
endfunction # generate_filter
.endtemplate
###############################################################################
